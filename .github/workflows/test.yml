name: 'Terraform Test'

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./assets/terraform

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Lint
      uses: actionshub/terraform-lint@main

  tests:
    needs: 'lint'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./assets/terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@main

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.7

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    # Apply the execution plan for Terraform
    - name: Terraform Apply
      run: terraform apply -auto-approve -var="write_kubeconfig=true"
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Install Python3
      uses: actions/setup-python@v3
      with:
        python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      working-directory: ./assets/kubetest

    - name: Run unit tests
      run: python -m pytest -s . --kube-config ../terraform/kubeconfig
      working-directory: ./assets/kubetest

    # Destroy the execution plan for Terraform
    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      working-directory: ./assets/terraform
